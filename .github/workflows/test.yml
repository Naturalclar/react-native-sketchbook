name: CI
on: push

jobs:
  lint:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [16, 18]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v2
        with:
          version: 6.0.2
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-      
      - name: Install Dependencies
        run: pnpm install
      - name: Run Lint
        run: npm run lint
  typecheck:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [16, 18]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v2
        with:
          version: 6.0.2
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-      
      - name: Install Dependencies
        run: pnpm install
      - run: npm run type-check
  visual-regression:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [16, 18]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: workaround for detached HEAD
        run: git checkout ${GITHUB_REF#refs/heads/} || git checkout -b ${GITHUB_REF#refs/heads/} && git pull
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v2
        with:
          version: 6.0.2
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-      
      - name: Install Dependencies
        run: pnpm install
      - name: Capture Screenshots
        run: npm run storycap:all
      - name: Run visual-regression test
        run: npm run reg-suit
